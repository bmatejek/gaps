#
# Makefile setup for GAPS
#


#
# Targets
#

OBJS=$(CCSRCS:.cpp=.o) $(CSRCS:.c=.o) 
INCS=$(HSRCS) $(CCSRCS:.cpp=.h) $(CSRCS:.c=.h)



#
# Get the operating system and architecture type
#

OS=$(shell uname -s)
ARCH=$(shell uname -m)

#
# External dependencies
#




INCLUDE_DIRS=-I/usr/include/hdf5/serial



#
# C flags
#

#ifeq ("$(findstring CYGWIN,$(OS))", "CYGWIN")
#OS_CFLAGS=-Wl,-stack_size,0x100000000
#endif

CC=g++
BASE_CFLAGS=$(USER_CFLAGS) $(OS_CFLAGS) -Wall -I. -I../../pkgs $(INCLUDE_DIRS) 
DEBUG_CFLAGS=$(BASE_CFLAGS) -g
OPT_CFLAGS=$(BASE_CFLAGS) -O3 -DNDEBUG
CFLAGS=$(DEBUG_CFLAGS)



#
# Directories
#

RELEASE_DIR=../../release
EXE_DIR=../../bin/$(ARCH)
LIB_DIR=../../lib/$(ARCH)


# additional include for Linux based systems
ifeq ("$(findstring CYGWIN,$(OS))", "CYGWIN")
EXTERNAL_LIB_DIR=-L$(OPENCV_LIB)
else
EXTERNAL_LIB_DIR=-L$(OPENCV_LIB) -L/usr/local/cuda/lib64 -L/usr/lib/x86_64-linux-gnu/hdf5/serial
endif


#
# Default rules
#

.SUFFIXES: .cpp .C .c .o

.cpp.o:
	$(CC) $(CFLAGS) -c $<

.C.o:
	$(CC) $(CFLAGS) -c $<

.c.o:
	gcc $(CFLAGS) -c $<

